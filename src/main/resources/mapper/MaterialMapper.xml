<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linkpal.map.MaterialMapper">
  <resultMap id="BaseResultMap" type="com.linkpal.model.Material">
    <id column="fid" jdbcType="INTEGER" property="fid" />
    <result column="materialNumber" jdbcType="VARCHAR" property="materialnumber" />
    <result column="materialName" jdbcType="VARCHAR" property="materialname" />
    <result column="materialModel" jdbcType="VARCHAR" property="materialmodel" />
    <result column="materialUnit" jdbcType="VARCHAR" property="materialunit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    fid, materialNumber, materialName, materialModel, materialUnit
  </sql>
  <select id="selectByExample" parameterType="com.linkpal.model.example.MaterialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from T_VS_Material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_VS_Material
    where fid = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from T_VS_Material
    where fid = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.linkpal.model.example.MaterialExample">
    delete from T_VS_Material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.linkpal.model.Material" useGeneratedKeys="true" keyProperty="fid">
    insert into T_VS_Material (materialNumber, materialName,
      materialModel, materialUnit,createtime)
    values (#{materialnumber,jdbcType=VARCHAR}, #{materialname,jdbcType=VARCHAR},
      #{materialmodel,jdbcType=VARCHAR}, #{materialunit,jdbcType=VARCHAR},#{createtime})
  </insert>
  <insert id="insertSelective" parameterType="com.linkpal.model.Material">
    insert into T_VS_Material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="materialnumber != null">
        materialNumber,
      </if>
      <if test="materialname != null">
        materialName,
      </if>
      <if test="materialmodel != null">
        materialModel,
      </if>
      <if test="materialunit != null">
        materialUnit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="materialnumber != null">
        #{materialnumber,jdbcType=VARCHAR},
      </if>
      <if test="materialname != null">
        #{materialname,jdbcType=VARCHAR},
      </if>
      <if test="materialmodel != null">
        #{materialmodel,jdbcType=VARCHAR},
      </if>
      <if test="materialunit != null">
        #{materialunit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.linkpal.model.example.MaterialExample" resultType="java.lang.Long">
    select count(*) from T_VS_Material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="getDetail" parameterType="java.lang.String" resultMap="BaseResultMap">
      SELECT * FROM T_VS_Material WHERE materialnumber = #{materialnumber,jdbcType=VARCHAR}
    </select>
  <update id="updateByExampleSelective" parameterType="map">
    update T_VS_Material
    <set>
      <if test="record.materialnumber != null">
        materialNumber = #{record.materialnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.materialname != null">
        materialName = #{record.materialname,jdbcType=VARCHAR},
      </if>
      <if test="record.materialmodel != null">
        materialModel = #{record.materialmodel,jdbcType=VARCHAR},
      </if>
      <if test="record.materialunit != null">
        materialUnit = #{record.materialunit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update T_VS_Material
    set materialNumber = #{record.materialnumber,jdbcType=VARCHAR},
      materialName = #{record.materialname,jdbcType=VARCHAR},
      materialModel = #{record.materialmodel,jdbcType=VARCHAR},
      materialUnit = #{record.materialunit,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.linkpal.model.Material">
    update T_VS_Material
    <set>
      <if test="materialnumber != null">
        materialNumber = #{materialnumber,jdbcType=VARCHAR},
      </if>
      <if test="materialname != null">
        materialName = #{materialname,jdbcType=VARCHAR},
      </if>
      <if test="materialmodel != null">
        materialModel = #{materialmodel,jdbcType=VARCHAR},
      </if>
      <if test="materialunit != null">
        materialUnit = #{materialunit,jdbcType=VARCHAR},
      </if>
    </set>
    where fid = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linkpal.model.Material">
    update T_VS_Material
    set materialNumber = #{materialnumber,jdbcType=VARCHAR},
      materialName = #{materialname,jdbcType=VARCHAR},
      materialModel = #{materialmodel,jdbcType=VARCHAR},
      materialUnit = #{materialunit,jdbcType=VARCHAR}
    where fid = #{fid,jdbcType=INTEGER}
  </update>
  <select id="getPageList" parameterType="map" resultMap="BaseResultMap">
  SELECT TOP #{pageSize, jdbcType=INTEGER} * FROM T_VS_Material WHERE fid NOT IN (SELECT TOP #{perSize, jdbcType=INTEGER} fid from T_VS_Material)
</select>
  <select id="getTipPageList" parameterType="map" resultMap="BaseResultMap">
    SELECT TOP #{pageSize, jdbcType=INTEGER} * FROM T_VS_Material WHERE fid NOT IN (SELECT TOP #{perSize, jdbcType=INTEGER} fid from T_VS_Material) AND
    materialNumber LIKE #{materialnumber, jdbcType=VARCHAR}
  </select>

  <delete id="deleteBatch">
    delete from T_VS_material where FID in (
    <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    )

  </delete>

  <select id="getList"  resultType="com.linkpal.model.Material">
    SELECT top ${pageSize} *
    from t_VS_Material
    where
    fid not in (
    select top ${pageIndex} fid from t_VS_Material

    <where>
      <if test="t.materialnumber!=null and t.materialnumber!= '' ">
        and materialnumber like '%${t.materialnumber}%' 		</if>
      <if test="t.materialname!=null and t.materialname!= '' ">
        and materialname like '%${t.materialname}%'
      </if>

    </where>
    )

    <if test="t.materialnumber!=null and t.materialnumber!= '' ">
      and materialnumber like '%${t.materialnumber}%' 		</if>
    <if test="t.materialname!=null and t.materialname!= '' ">
      and materialname like '%${t.materialname}%'
    </if>


    order by fid
  </select>

</mapper>