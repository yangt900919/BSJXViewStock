<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linkpal.map.StockMapper">
  <cache type="org.mybatis.caches.ehcache.EhcacheCache"></cache>
  <resultMap id="BaseResultMap" type="com.linkpal.model.Stock">
    <id column="fid" jdbcType="INTEGER" property="fid" />
    <result column="stockNumber" jdbcType="VARCHAR" property="stocknumber" />
    <result column="stockName" jdbcType="VARCHAR" property="stockname" />
    <result column="stockAddress" jdbcType="VARCHAR" property="stockaddress" />
    <result column="stockTel" jdbcType="VARCHAR" property="stocktel" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
    <result column="fcreatetime" jdbcType="TIMESTAMP" property="fcreatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    fid, stockNumber, stockName, stockAddress, stockTel,flag,fcreatetime
  </sql>
  <select id="selectByExample" parameterType="com.linkpal.model.example.StockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from T_VS_Stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from T_VS_Stock
    where fid = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from T_VS_Stock
    where fid = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.linkpal.model.example.StockExample">
    delete from T_VS_Stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.linkpal.model.Stock">
    insert into T_VS_Stock (stockNumber, stockName,
    stockAddress, stockTel,flag,fcreatetime)
    values (#{stocknumber,jdbcType=VARCHAR}, #{stockname,jdbcType=VARCHAR},
    #{stockaddress,jdbcType=VARCHAR}, #{stocktel,jdbcType=VARCHAR}, #{flag,jdbcType=VARCHAR}, #{fcreatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.linkpal.model.Stock">
    insert into T_VS_Stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        fid,
      </if>
      <if test="stocknumber != null">
        stockNumber,
      </if>
      <if test="stockname != null">
        stockName,
      </if>
      <if test="stockaddress != null">
        stockAddress,
      </if>
      <if test="stocktel != null">
        stockTel,
      </if>
      <if test="flag != null">
        flag
      </if>
      <if test="fcreatetime != null">
        fcreatetime
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stocknumber != null">
        #{stocknumber,jdbcType=VARCHAR},
      </if>
      <if test="stockname != null">
        #{stockname,jdbcType=VARCHAR},
      </if>
      <if test="stockaddress != null">
        #{stockaddress,jdbcType=VARCHAR},
      </if>
      <if test="stocktel != null">
        #{stocktel,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=VARCHAR}
      </if>
      <if test="fcreatetime != null">
        #{fcreatetime,jdbcType=TIMESTAMP}
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.linkpal.model.example.StockExample" resultType="java.lang.Long">
    select count(*) from T_VS_Stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="getDetail" resultType="com.linkpal.model.Stock" parameterType="java.lang.String">
    SELECT * FROM T_VS_Stock WHERE  stockNumber = #{stocknumber,jdbcType=VARCHAR}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update T_VS_Stock
    <set>
      <if test="record.fid != null">
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.stocknumber != null">
        stockNumber = #{record.stocknumber,jdbcType=VARCHAR},
      </if>
      <if test="record.stockname != null">
        stockName = #{record.stockname,jdbcType=VARCHAR},
      </if>
      <if test="record.stockaddress != null">
        stockAddress = #{record.stockaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.stocktel != null">
        stockTel = #{record.stocktel,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.fcreatetime != null">
        fcreatetime = #{record.fcreatetime,jdbcType=TIMESTAMP}
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update T_VS_Stock
    set stockNumber = #{record.stocknumber,jdbcType=VARCHAR},
    stockName = #{record.stockname,jdbcType=VARCHAR},
    stockAddress = #{record.stockaddress,jdbcType=VARCHAR},
    stockTel = #{record.stocktel,jdbcType=VARCHAR},
    flag = #{record.flag,jdbcType=VARCHAR},
    fcreatetime = #{record.fcreatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.linkpal.model.Stock">
    update T_VS_Stock
    <set>
      <if test="stocknumber != null">
        stockNumber = #{stocknumber,jdbcType=VARCHAR},
      </if>
      <if test="stockname != null">
        stockName = #{stockname,jdbcType=VARCHAR},
      </if>
      <if test="stockaddress != null">
        stockAddress = #{stockaddress,jdbcType=VARCHAR},
      </if>
      <if test="stocktel != null">
        stockTel = #{stocktel,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{stocktel,jdbcType=VARCHAR},
      </if>
      <if test="record.fcreatetime != null">
        fcreatetime = #{record.fcreatetime,jdbcType=TIMESTAMP}
      </if>
    </set>
    where fid = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linkpal.model.Stock">
    update T_VS_Stock
    set stockNumber = #{stocknumber,jdbcType=VARCHAR},
    stockName = #{stockname,jdbcType=VARCHAR},
    stockAddress = #{stockaddress,jdbcType=VARCHAR},
    stockTel = #{stocktel,jdbcType=VARCHAR},
    flag = #{stocktel,jdbcType=VARCHAR},
    fcreatetime = #{record.fcreatetime,jdbcType=TIMESTAMP}
    where fid = #{fid,jdbcType=INTEGER}
  </update>
  <select id="getPageList" parameterType="map" resultMap="BaseResultMap">
    SELECT TOP #{pageSize, jdbcType=INTEGER} * FROM T_VS_Stock WHERE fid NOT IN (SELECT TOP #{perSize, jdbcType=INTEGER} fid from T_VS_Stock)
  </select>
  <select id="getTipPageList" parameterType="map" resultMap="BaseResultMap">
    SELECT TOP #{pageSize, jdbcType=INTEGER} * FROM T_VS_Stock WHERE fid NOT IN (SELECT TOP #{perSize, jdbcType=INTEGER} fid from T_VS_Stock) AND
    stockNumber LIKE #{fnumber, jdbcType=VARCHAR}
  </select>

  <select id="getList"   resultType="com.linkpal.model.Stock">
    SELECT top ${pageSize} t0.*
    from t_VS_Stock   t0
    where
    t0.fid not in (
    select top ${pageIndex} fid from t_VS_Stock

    <where>
      <if test="t.stocknumber!=null and t.stocknumber!= '' ">
        and stocknumber like '%${t.stocknumber}%' 		</if>
      <if test="t.stockname!=null and t.stockname!= '' ">
        and stockname like '%${t.stockname}%'
      </if>
      <if test="t.stockaddress!=null and t.stockaddress!= '' ">
        and stockaddress like '%${t.stockaddress}%'
      </if>
      <if test="t.stocktel!=null and t.stocktel!= '' ">
        and stocktel like '%${t.stocktel}%'
      </if>
    </where>
    order by fid
    )

    <if test="t.stocknumber!=null and t.stocknumber!= '' ">
      and t0.stocknumber like '%${t.stocknumber}%' 		</if>
    <if test="t.stockname!=null and t.stockname!= '' ">
      and t0.stockname like '%${t.stockname}%'
    </if>
    <if test="t.stockaddress!=null and t.stockaddress!= '' ">
      and t0.stockaddress like '%${t.stockaddress}%'
    </if>
    <if test="t.stocktel!=null and t.stocktel!= '' ">
      and t0.stocktel like '%${t.stocktel}%'
    </if>

    order by t0.fid
  </select>
  <delete id="deleteBatch">
    delete from T_VS_Stock where FID in (
    <foreach collection="array" index="index" item="item" open="" separator="," close="">
      #{item}
    </foreach>
    )

  </delete>
</mapper>