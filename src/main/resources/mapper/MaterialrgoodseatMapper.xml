<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linkpal.map.MaterialrgoodseatMapper">
  <cache type="org.mybatis.caches.ehcache.EhcacheCache"></cache>
  <resultMap id="BaseResultMap" type="com.linkpal.model.Materialrgoodseat">
    <id column="FID" jdbcType="INTEGER" property="fid" />
    <result column="FMaterialID" jdbcType="INTEGER" property="fmaterialid" />
    <result column="FGoodSeatID" jdbcType="INTEGER" property="fgoodseatid" />
    <result column="FRemark" jdbcType="NVARCHAR" property="fremark" />
    <result column="FCreateTime" jdbcType="TIMESTAMP" property="fcreatetime" />

    <association property="material" javaType="com.linkpal.model.Material">
      <id column="mID" property="fid"/>
      <result column="mNumber" property="materialnumber"/>
      <result column="mName" property="materialname"/>
      <result column="mModel" property="materialmodel"/>
      <result column="mUnit" property="materialunit"/>
    </association>

    <association property="goodseat" javaType="com.linkpal.model.Goodseat">
      <id column="gID" property="fid"/>
      <result column="gNumber" property="fnumber"/>
      <association property="scabinet" javaType="com.linkpal.model.Scabinet">
        <id column="sID" property="fid"/>
        <result column="sNumber" property="fnumber"/>
        <result column="sName" property="fname"/>
      </association>

      <association property="cabinet" javaType="com.linkpal.model.Cabinet">
        <id column="cID" property="fid"/>
        <result column="cNumber" property="fnumber"/>
        <result column="cName" property="fname"/>
      </association>

      <association property="stock" javaType="com.linkpal.model.Stock">
        <id column="stID" property="fid"/>
        <result column="stNumber" property="stocknumber"/>
        <result column="stName" property="stockname"/>
      </association>
    </association>

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    t0.FID, t0.FMaterialID, t0.FGoodSeatID,  t0.FRemark, t0.FCreateTime,t1.fid mID,t1.materialnumber mNumber,t1.materialname mName,
    t1.materialmodel mModel,t1.materialunit mUnit,t2.fid gID,t2.fnumber gNumber,
    t3.fid sID,t3.fnumber sNumber,t3.fname sName,
    t4.fid cID,t4.fnumber cNumber,t4.fname cName,t5.fid stID,t5.stocknumber stNumber,
    t5.stockname stName
  </sql>
  <select id="selectByExample" parameterType="com.linkpal.model.example.MaterialrgoodseatExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from T_VS_MaterialRGoodSeat t0
    inner join t_vs_material t1 on t0.fmaterialid=t1.fid
    inner join t_vs_goodseat t2 on t0.fgoodseatid=t2.fid
    inner join t_vs_scabinet t3 on t2.fscabinetid=t3.fid
    inner join t_vs_cabinet t4 on t3.fcabinetid=t4.fid
/*   inner join t_vs_cabinettype t3 on t1.fcabinettypeid=t3.fid*/
    inner join t_vs_stock t5 on t3.fstockid=t5.fid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from T_VS_MaterialRGoodSeat t0
    inner join t_vs_material t1 on t0.fmaterialid=t1.fid
    inner join t_vs_goodseat t2 on t0.fgoodseatid=t2.fid
    inner join t_vs_scabinet t3 on t2.fscabinetid=t3.fid
    inner join t_vs_cabinet t4 on t3.fcabinetid=t4.fid
    /*   inner join t_vs_cabinettype t3 on t1.fcabinettypeid=t3.fid*/
    inner join t_vs_stock t5 on t3.fstockid=t5.fid
    where t0.FID = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from T_VS_MaterialRGoodSeat
    where FID = #{fid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.linkpal.model.example.MaterialrgoodseatExample">
    delete from T_VS_MaterialRGoodSeat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.linkpal.model.Materialrgoodseat">
    insert into T_VS_MaterialRGoodSeat ( fmaterialid, fgoodseatid,
   FRemark, FCreateTime
    )
    values ( #{fmaterialid,jdbcType=INTEGER}, #{fgoodseatid,jdbcType=INTEGER},
    #{fremark,jdbcType=NVARCHAR}, #{fcreatetime,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.linkpal.model.Materialrgoodseat">
    insert into T_VS_MaterialRGoodSeat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      
   
      <if test="fmaterialid != null">
        fmaterialid,
      </if>
      <if test="fgoodseatid != null">
        fgoodseatid,
      </if>
   
      <if test="fremark != null">
        FRemark,
      </if>
      <if test="fcreatetime != null">
        FCreateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
   
      <if test="fmaterialid != null">
        #{fmaterialid,jdbcType=INTEGER},
      </if>
      <if test="fgoodseatid != null">
        #{fgoodseatid,jdbcType=INTEGER},
      </if>
  
      <if test="fremark != null">
        #{fremark,jdbcType=NVARCHAR},
      </if>
      <if test="fcreatetime != null">
        #{fcreatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.linkpal.model.example.MaterialrgoodseatExample" resultType="java.lang.Long">
    select count(*) from T_VS_MaterialRGoodSeat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update T_VS_MaterialRGoodSeat
    <set>
      <if test="record.fid != null">
        FID = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.fmaterialid != null">
        fmaterialid = #{record.fmaterialid,jdbcType=INTEGER},
      </if>
      <if test="record.fgoodseatid != null">
        fgoodseatid = #{record.fgoodseatid,jdbcType=INTEGER},
      </if>
    
      <if test="record.fremark != null">
        FRemark = #{record.fremark,jdbcType=NVARCHAR},
      </if>
      <if test="record.fcreatetime != null">
        FCreateTime = #{record.fcreatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update T_VS_MaterialRGoodSeat
    set FID = #{record.fid,jdbcType=INTEGER},
    fmaterialid = #{record.fmaterialid,jdbcType=INTEGER},
    fgoodseatid = #{record.fgoodseatid,jdbcType=INTEGER},
    FRemark = #{record.fremark,jdbcType=NVARCHAR},
    FCreateTime = #{record.fcreatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.linkpal.model.Materialrgoodseat">
    update T_VS_MaterialRGoodSeat
    <set>
      <if test="fmaterialid != null">
        fmaterialid = #{fmaterialid,jdbcType=INTEGER},
      </if>
      <if test="fgoodseatid != null">
        fgoodseatid = #{fgoodseatid,jdbcType=INTEGER},
      </if>
      <if test="fremark != null">
        FRemark = #{fremark,jdbcType=NVARCHAR},
      </if>
      <if test="fcreatetime != null">
        FCreateTime = #{fcreatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where FID = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linkpal.model.Materialrgoodseat">
    update T_VS_MaterialRGoodSeat
    set fmaterialid = #{fmaterialid,jdbcType=INTEGER},
    fgoodseatid = #{fgoodseatid,jdbcType=INTEGER},
    FRemark = #{fremark,jdbcType=NVARCHAR},
    FCreateTime = #{fcreatetime,jdbcType=TIMESTAMP}
    where FID = #{fid,jdbcType=INTEGER}

  </update>

  <delete id="deleteBatch">
    delete from T_VS_materialrgoodseat where FID in (
    <foreach collection="array" index="index" item="item" open="" separator="," close="">
      #{item}
    </foreach>
    )

  </delete>

  <select id="getList"  resultMap="BaseResultMap">

    select top ${pageSize} <include refid="Base_Column_List" />
    from t_vs_materialrgoodseat t0
    inner join t_vs_material t1 on t0.fmaterialid=t1.fid
    inner join t_vs_goodseat t2 on t0.fgoodseatid=t2.fid
    inner join t_vs_scabinet t3 on t2.fscabinetid=t3.fid
    inner join t_vs_cabinet t4 on t3.fcabinetid=t4.fid
    /*   inner join t_vs_cabinettype t3 on t1.fcabinettypeid=t3.fid*/
    inner join t_vs_stock t5 on t3.fstockid=t5.fid
    where
    t0.fid not in (
    select top ${pageIndex} tt0.fid from t_vs_materialrgoodseat tt0
    inner join t_vs_material tt1 on tt0.fmaterialid=tt1.fid
    inner join t_vs_goodseat tt2 on tt0.fgoodseatid=tt2.fid
    inner join t_vs_scabinet tt3 on tt2.fscabinetid=tt3.fid

    <where>
      <if test="t.fmaterialid>0">
        and tt0.fmaterialid =#{t.fmaterialid} 		</if>
      <if test="t.fgoodseatid>0 ">
        and tt0.fgoodseatid =#{t.fgoodseatid}
      </if>
      <if test="t.fscabinetid>0">
        and tt2.fscabinetid =#{t.fscabinetid} 		</if>
      <if test="t.fcabinetid>0">
        and tt3.fcabinetid =#{t.fcabinetid} 		</if>
      <if test="t.fstockid>0">
        and tt3.fstockid =#{t.fstockid} 		</if>
    </where>
    order by tt0.fid
    )



    <if test="t.fmaterialid">
      and t0.fmaterialid =#{t.fmaterialid} 		</if>
    <if test="t.fgoodseatid>0 ">
      and t0.fgoodseatid =#{t.fgoodseatid}
    </if>
    <if test="t.fscabinetid>0">
      and t2.fscabinetid =#{t.fscabinetid} 		</if>
    <if test="t.fcabinetid>0">
      and t3.fcabinetid =#{t.fcabinetid} 		</if>
    <if test="t.fstockid>0">
      and t3.fstockid =#{t.fstockid} 		</if>
    order by t0.fid
  </select>

  <select id="getTotalNum" parameterType="com.linkpal.model.Materialrgoodseat" resultType="int">
    select count(*) from  t_vs_materialrgoodseat tt0
    inner join t_vs_material tt1 on tt0.fmaterialid=tt1.fid
    inner join t_vs_goodseat tt2 on tt0.fgoodseatid=tt2.fid
    inner join t_vs_scabinet tt3 on tt2.fscabinetid=tt3.fid

    <where>
      <if test="fmaterialid>0">
        and tt0.fmaterialid =#{fmaterialid} 		</if>
      <if test="fgoodseatid>0 ">
        and tt0.fgoodseatid =#{fgoodseatid}
      </if>
      <if test="fscabinetid>0">
        and tt2.fscabinetid =#{fscabinetid} 		</if>
      <if test="fcabinetid>0">
        and tt3.fcabinetid =#{fcabinetid} 		</if>
      <if test="fstockid>0">
        and tt3.fstockid =#{fstockid} 		</if>
    </where>

  </select>


    <update id="ajustGoodsSeat" statementType="CALLABLE" parameterType="java.util.Map">
        exec proc_ajustGoodsSeat #{fmaterialid},#{fsrc_goodseatid},#{fdes_goodseatid}
</update>

</mapper>